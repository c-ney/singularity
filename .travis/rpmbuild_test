#!/bin/bash -ex

# this script runs as root under docker 

OS_TYPE="$1"
OS_VERSION="$2"

# build and install
if [ "$OS_TYPE" = "centos" ]; then
    rpms_dir='/root/rpmbuild/RPMS'
    install_autogen_reqs='
        yum install -y libtool rpm-build make yum-utils
    '
    install_configure_reqs='
        yum-builddep -y singularity.spec
    '
    install_test_reqs='
        yum install -y epel-release
        yum install -y python34 python34-pip python34-setuptools docker
        yum install -y pylint
        yum install -y sudo which e2fsprogs
    '
    install_rpms='
        yum localinstall -y \
    '
elif [ "$OS_TYPE" = "opensuse" ]; then
    rpms_dir='/usr/src/packages/RPMS'
    install_autogen_reqs='
        zypper install -y --no-recommends libtool rpm-build
    '
    install_configure_reqs='
        zypper install -y --no-recommends $(rpmspec -q --buildrequires --qf "[%{REQUIRENAME} ]" singularity.spec)
    '
    install_test_reqs='
        zypper install -y --no-recommends python3 python3-pip python3-setuptools docker
        zypper install -y --no-recommends python3-pylint
        zypper install -y --no-recommends sudo which e2fsprogs
    '
    install_rpms='
        zypper --no-gpg-checks install -y --no-recommends \
    '
else
    echo "Cannot rpmbuild on $OS_TYPE"
    exit 1
fi

eval "$install_autogen_reqs"
./autogen.sh
eval "$install_configure_reqs"
./configure
make dist
rpmbuild -ta *.tar.gz
#eval "$install_runtime_reqs"
eval "$install_rpms" "$rpms_dir"/*/*.rpm

if [ "$OS_TYPE" = "centos" ] && [ "$OS_VERSION" = 6 ]; then
    echo "the test suite has not yet been ported to centos6 python, skipping."
    exit
fi

eval "$install_test_reqs"

# run the test suite
sed -i 's,^prefix=.*,prefix=/usr,' test.sh
sed -i 's,^sysconfdir=.*,sysconfdir=/etc,' test.sh
sed -i 's,^localstatedir=.*,localstatedir=/var,' test.sh
if [ "$OS_TYPE" = "opensuse" ]; then
    sed -ri 's,(^libexecdir=.*)/.*,\1/lib",' test.sh
fi
useradd testuser
echo "Defaults:testuser env_keep=DOCKER_HOST" >>/etc/sudoers
echo "testuser ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers

# build image for isolated builds
sed -i 's,^prefix=.*,prefix=/usr,' secbuildimg.sh
sed -i 's,^sysconfdir=.*,sysconfdir=/etc,' secbuildimg.sh
sed -i 's,^localstatedir=.*,localstatedir=/var,' secbuildimg.sh
if [ "$OS_TYPE" = "opensuse" ]; then
    sed -ri 's,(^libexecdir=.*)/.*,\1/lib",' secbuildimg.sh
fi
make secbuildimg

printenv SINGULARITY_CONTAINER
printenv SINGULARITY_CONTENTS
su testuser -c "make test"
